name: AI Code Reviewer & Issue Labeler

on:
  pull_request:
    types: [opened, synchronize]
  issues:
    types: [opened]

permissions: write-all

jobs:
  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: Vendor-frontend/Vendor-repo-ai@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAIAPIKEY }}
          OPENAI_API_MODEL: "gpt-4"

  labeler:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Extract Issue Info
        id: extract
        run: |
          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
        
      - name: Get Label from GPT
        id: gpt
        run: |
          # Use GitHub context directly in jq to avoid environment variable issues
          LABEL=$(jq -n \
            --arg title '${{ github.event.issue.title }}' \
            --arg body '${{ github.event.issue.body }}' \
            '{
              model: "gpt-4o",
              messages: [
                {
                  role: "system",
                  content: "You are a GitHub assistant. Classify this GitHub issue using only one of these labels: bug, feature, enhancement, question. Just return the single label."
                },
                {
                  role: "user", 
                  content: ("Issue title: " + $title + "\n\nIssue body: " + $body)
                }
              ],
              max_tokens: 10,
              temperature: 0
            }' | \
            curl -s https://api.openai.com/v1/chat/completions \
              -H "Authorization: Bearer ${{ secrets.OPENAIAPIKEY }}" \
              -H "Content-Type: application/json" \
              -d @- | \
            jq -r '.choices[0].message.content' | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]')

          echo "LABEL=$LABEL" >> $GITHUB_ENV
          echo "Predicted label: $LABEL"

      - name: Checkout Repo
        uses: actions/checkout@v3
           
      - name: Apply label to issue
        run: |
          echo "Labeling issue #${ISSUE_NUMBER} as '${LABEL}'"
          gh issue edit "$ISSUE_NUMBER" --add-label "$LABEL"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
          LABEL: ${{ env.LABEL }}
