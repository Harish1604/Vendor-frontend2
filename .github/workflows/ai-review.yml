name: AI Code Reviewer & Issue Labeler

on:
  pull_request:
    types: [opened, synchronize]
  issues:
    types: [opened]

permissions: write-all

jobs:
  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: AI Code Reviewer
        uses: Vendor-frontend/Vendor-repo-ai@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAIAPIKEY }}
          OPENAI_API_MODEL: "gpt-4"

  labeler:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Extract Issue Info
        id: extract
        run: |
          cat <<EOF >> $GITHUB_ENV  
          ISSUE_TITLE=${{ github.event.issue.title }} 
          EOF

          cat <<EOF >> $GITHUB_ENV
          ISSUE_BODY=${{ github.event.issue.body }}
          EOF

          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV

      - name: Get Label from GPT
        id: gpt
        run: |
          REQUEST_DATA=$(cat <<EOF
          {
            "model": "gpt-4o",
            "messages": [
              {
                "role": "system",
                "content": "You are a GitHub assistant. Classify this GitHub issue using only one of these labels: bug, feature, enhancement, question. Just return the single label."
              },
              {
                "role": "user",
                "content": "Issue title: ${ISSUE_TITLE}\n\nIssue body: ${ISSUE_BODY}"
              }
            ],
            "max_tokens": 10,
            "temperature": 0
          }
          EOF
          )

          LABEL=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENAIAPIKEY }}" \
            -H "Content-Type: application/json" \
            -d "$REQUEST_DATA" | jq -r '.choices[0].message.content' | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]')

          echo "LABEL=$LABEL" >> $GITHUB_ENV
          echo "Predicted label: $LABEL"

      - name: Checkout Repo
        uses: actions/checkout@v3
           
      - name: Apply label to issue
        run: |
          echo "Labeling issue #${ISSUE_NUMBER} as '${LABEL}'"
          gh issue edit "$ISSUE_NUMBER" --add-label "$LABEL"
          env:
           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
           LABEL: ${{ env.LABEL }}
